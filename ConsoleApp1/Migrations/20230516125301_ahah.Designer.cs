// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230516125301_ahah")]
    partial class ahah
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp1.Frekwencja", b =>
                {
                    b.Property<int>("fr_relID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fr_relID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fr_relID"));

                    b.Property<string>("fr_Notatka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fr_Obecny")
                        .HasColumnType("bit");

                    b.Property<string>("fr_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fr_stID")
                        .HasColumnType("int");

                    b.HasKey("fr_relID");

                    b.HasIndex("fr_stID");

                    b.ToTable("Frekwencja");
                });

            modelBuilder.Entity("ConsoleApp1.Grupy", b =>
                {
                    b.Property<int>("gr_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gr_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gr_ID"));

                    b.Property<string>("gr_Kierunek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gr_Kod_grupy")
                        .HasColumnType("int");

                    b.Property<int>("gr_Rok_akad")
                        .HasColumnType("int");

                    b.Property<int>("gr_Semestr")
                        .HasColumnType("int");

                    b.Property<string>("gr_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gr_Stopien_stud")
                        .HasColumnType("int");

                    b.Property<string>("gr_Tryb_stud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gr_Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gr_ID");

                    b.ToTable("Grupy");
                });

            modelBuilder.Entity("ConsoleApp1.ObsadaGrup", b =>
                {
                    b.Property<int>("ob_ID")
                        .HasColumnType("int")
                        .HasColumnName("Ob_ID");

                    b.Property<DateTime?>("ob_Data_do")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ob_Data_od")
                        .HasColumnType("datetime2");

                    b.Property<string>("ob_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ob_stID")
                        .HasColumnType("int");

                    b.HasKey("ob_ID");

                    b.ToTable("ObsadaGrup");
                });

            modelBuilder.Entity("ConsoleApp1.PozycjePlanu", b =>
                {
                    b.Property<int>("pp_ID")
                        .HasColumnType("int")
                        .HasColumnName("pp_ID");

                    b.Property<int>("Przedmiotypr_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("pp_Dzień")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("pp_Godzina_do")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("pp_Godzina_od")
                        .HasColumnType("time");

                    b.Property<int>("pp_Grupa")
                        .HasColumnType("int");

                    b.Property<float>("pp_Liczba_godzin")
                        .HasColumnType("real");

                    b.Property<int>("pp_Nazwa")
                        .HasColumnType("int");

                    b.Property<string>("pp_Sala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pp_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pp_ID");

                    b.HasIndex("Przedmiotypr_ID");

                    b.ToTable("PozycjePlanu");
                });

            modelBuilder.Entity("ConsoleApp1.Przedmioty", b =>
                {
                    b.Property<int>("pr_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pr_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pr_ID"));

                    b.Property<string>("pr_Kierunek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_Kod_sylabusa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pr_Liczba_h_tyg")
                        .HasColumnType("int");

                    b.Property<string>("pr_Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pr_Rok_akademicki")
                        .HasColumnType("int");

                    b.Property<string>("pr_Semestr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pr_Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pr_ID");

                    b.ToTable("Przedmioty");
                });

            modelBuilder.Entity("ConsoleApp1.RealizacjaPlanu", b =>
                {
                    b.Property<int>("re_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("re_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("re_ID"));

                    b.Property<DateTime>("re_Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("re_Grupa")
                        .HasColumnType("int");

                    b.Property<string>("re_Konspekt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("re_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("re_Temat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("re_Uwagi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("re_ppID")
                        .HasColumnType("int");

                    b.HasKey("re_ID");

                    b.HasIndex("re_ppID")
                        .IsUnique();

                    b.ToTable("RealizacjaPlanu");
                });

            modelBuilder.Entity("ConsoleApp1.Studenci", b =>
                {
                    b.Property<int>("st_ID")
                        .HasColumnType("int")
                        .HasColumnName("st_ID");

                    b.Property<string>("st_Imię")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("st_Rocznik_1s")
                        .HasColumnType("datetime2");

                    b.Property<string>("st_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("st_ID");

                    b.ToTable("Studenci");
                });

            modelBuilder.Entity("ConsoleApp1.Frekwencja", b =>
                {
                    b.HasOne("ConsoleApp1.RealizacjaPlanu", "realizacjaPlanu")
                        .WithMany("frekwencja")
                        .HasForeignKey("fr_stID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Studenci", "studenci")
                        .WithMany("frekwencja")
                        .HasForeignKey("fr_stID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("realizacjaPlanu");

                    b.Navigation("studenci");
                });

            modelBuilder.Entity("ConsoleApp1.ObsadaGrup", b =>
                {
                    b.HasOne("ConsoleApp1.Grupy", "grupy")
                        .WithOne("obsadaGrup")
                        .HasForeignKey("ConsoleApp1.ObsadaGrup", "ob_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("grupy");
                });

            modelBuilder.Entity("ConsoleApp1.PozycjePlanu", b =>
                {
                    b.HasOne("ConsoleApp1.Przedmioty", "Przedmioty")
                        .WithMany()
                        .HasForeignKey("Przedmiotypr_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Przedmioty", "przedmioty")
                        .WithOne("pozycjePlanu")
                        .HasForeignKey("ConsoleApp1.PozycjePlanu", "pp_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_PozycjePlanu_Przedmioty_pp_ID");

                    b.HasOne("ConsoleApp1.RealizacjaPlanu", "realizacjaPlanu")
                        .WithOne("pozycjePlanu")
                        .HasForeignKey("ConsoleApp1.PozycjePlanu", "pp_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Przedmioty");

                    b.Navigation("przedmioty");

                    b.Navigation("realizacjaPlanu");
                });

            modelBuilder.Entity("ConsoleApp1.RealizacjaPlanu", b =>
                {
                    b.HasOne("ConsoleApp1.Grupy", "grupy")
                        .WithOne("realizacjaPlanu")
                        .HasForeignKey("ConsoleApp1.RealizacjaPlanu", "re_ppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("grupy");
                });

            modelBuilder.Entity("ConsoleApp1.Studenci", b =>
                {
                    b.HasOne("ConsoleApp1.ObsadaGrup", "obsadaGrup")
                        .WithMany("Studenci")
                        .HasForeignKey("st_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("obsadaGrup");
                });

            modelBuilder.Entity("ConsoleApp1.Grupy", b =>
                {
                    b.Navigation("obsadaGrup")
                        .IsRequired();

                    b.Navigation("realizacjaPlanu")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.ObsadaGrup", b =>
                {
                    b.Navigation("Studenci");
                });

            modelBuilder.Entity("ConsoleApp1.Przedmioty", b =>
                {
                    b.Navigation("pozycjePlanu")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.RealizacjaPlanu", b =>
                {
                    b.Navigation("frekwencja");

                    b.Navigation("pozycjePlanu")
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp1.Studenci", b =>
                {
                    b.Navigation("frekwencja");
                });
#pragma warning restore 612, 618
        }
    }
}
